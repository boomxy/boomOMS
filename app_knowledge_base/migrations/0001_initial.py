# Generated by Django 3.2 on 2022-04-29 15:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Doc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='文档标题')),
                ('pre_content', models.TextField(blank=True, null=True, verbose_name='编辑内容')),
                ('content', models.TextField(blank=True, null=True, verbose_name='文档内容')),
                ('parent_doc', models.IntegerField(default=0, verbose_name='上级文档')),
                ('top_doc', models.IntegerField(default=0, verbose_name='所属项目')),
                ('sort', models.IntegerField(default=9999, verbose_name='排序')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modify_time', models.DateTimeField(auto_now=True)),
                ('status', models.IntegerField(choices=[(0, '草稿'), (1, '发布'), (2, '回收站'), (3, '删除')], verbose_name='文档状态')),
                ('editor_mode', models.IntegerField(choices=[(1, 'Editormd'), (2, 'Vditor')], default=1, verbose_name='编辑器模式')),
                ('open_children', models.BooleanField(default=False, verbose_name='展开下级目录')),
                ('show_children', models.BooleanField(default=False, verbose_name='显示下级文档')),
                ('creat_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '文档',
                'verbose_name_plural': '文档',
            },
        ),
        migrations.CreateModel(
            name='EmailVerificationCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_address', models.EmailField(max_length=254, verbose_name='电子邮箱')),
                ('verification_type', models.CharField(max_length=50, verbose_name='验证码类型')),
                ('verification_code', models.CharField(max_length=6, verbose_name='验证码')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('expire_time', models.DateTimeField(verbose_name='过期时间')),
            ],
            options={
                'verbose_name': '邮箱验证码',
                'verbose_name_plural': '邮箱验证码',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='文集名称')),
                ('icon', models.URLField(blank=True, default=None, null=True, verbose_name='文集图标')),
                ('intro', models.TextField(verbose_name='介绍')),
                ('role', models.IntegerField(choices=[(0, '公开'), (1, '私密'), (2, '指定用户可见'), (3, '密码访问')], default=0, verbose_name='文集权限')),
                ('role_value', models.TextField(blank=True, null=True, verbose_name='文集权限值')),
                ('watermark', models.BooleanField(default=False, verbose_name='水印')),
                ('watermark_type', models.IntegerField(choices=[(1, '文字水印'), (2, '图片水印')], default=1, verbose_name='水印类型')),
                ('watermark_val', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='水印内容')),
                ('top', models.BooleanField(default=False, verbose_name='置顶')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('modify_time', models.DateTimeField(auto_now_add=True)),
                ('create_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '文集',
                'verbose_name_plural': '文集',
            },
        ),
        migrations.CreateModel(
            name='SysSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='设置名称')),
                ('value', models.TextField(blank=True, null=True, verbose_name='设置内容')),
                ('types', models.CharField(default='basic', max_length=10, verbose_name='设置类型')),
            ],
            options={
                'verbose_name': '系统设置',
                'verbose_name_plural': '系统设置',
            },
        ),
        migrations.CreateModel(
            name='UserToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=250, unique=True, verbose_name='token')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '用户 Token',
                'verbose_name_plural': '用户 Token',
            },
        ),
        migrations.CreateModel(
            name='UserOptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('editor_mode', models.IntegerField(choices=[(1, 'Editormd'), (2, 'Vditor')], default=1)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '用户选项',
                'verbose_name_plural': '用户选项',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='标签名')),
                ('create_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '标签',
                'verbose_name_plural': '标签',
            },
        ),
        migrations.CreateModel(
            name='RegisterCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='注册邀请码')),
                ('usage', models.IntegerField(default=1, verbose_name='有效次数')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('create_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='创建用户')),
            ],
            options={
                'verbose_name': '用户注册邀请码',
                'verbose_name_plural': '用户注册邀请码',
            },
        ),
        migrations.CreateModel(
            name='ProjectToc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('val', models.TextField(verbose_name='文集文档层级目录')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_knowledge_base.project')),
            ],
            options={
                'verbose_name': '文集目录',
                'verbose_name_plural': '文集目录',
            },
        ),
        migrations.CreateModel(
            name='ProjectReportFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_type', models.CharField(choices=[('epub', 'epub'), ('pdf', 'pdf'), ('docx', 'docx')], max_length=10, verbose_name='文件类型')),
                ('file_name', models.CharField(max_length=100, verbose_name='文件名称')),
                ('file_path', models.CharField(max_length=250, verbose_name='文件路径')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_knowledge_base.project')),
            ],
            options={
                'verbose_name': '文集导出',
                'verbose_name_plural': '文集导出',
            },
        ),
        migrations.CreateModel(
            name='ProjectReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('epub', models.IntegerField(choices=[(0, '不允许导出'), (1, '允许导出')], default=0, verbose_name='前台导出EPUB')),
                ('pdf', models.IntegerField(choices=[(0, '不允许导出'), (1, '允许导出')], default=0, verbose_name='前台导出PDF')),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app_knowledge_base.project')),
            ],
            options={
                'verbose_name': '文集导出',
                'verbose_name_plural': '文集导出',
            },
        ),
        migrations.CreateModel(
            name='ProjectCollaborator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.IntegerField(choices=[(0, '新建，修改(self)，删除(self)'), (1, '新建、修改(all), 删除(self)')], default=0)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_knowledge_base.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '文集协作',
                'verbose_name_plural': '文集协作',
            },
        ),
        migrations.CreateModel(
            name='MyCollect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collect_type', models.IntegerField(verbose_name='收藏类型')),
                ('collect_id', models.IntegerField(verbose_name='收藏对象ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('create_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '收藏',
                'verbose_name_plural': '收藏',
            },
        ),
        migrations.CreateModel(
            name='ImageGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(default='default', max_length=100, verbose_name='图片分组')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '图片分组',
                'verbose_name_plural': '图片分组',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_path', models.CharField(max_length=250, verbose_name='图片路径')),
                ('file_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='图片名称')),
                ('remark', models.CharField(blank=True, default='图片描述', max_length=250, null=True, verbose_name='图片标注')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_knowledge_base.imagegroup', verbose_name='图片分组')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DocTemp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='模板名称')),
                ('content', models.TextField(verbose_name='模板内容')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('modify_time', models.DateTimeField(auto_now=True)),
                ('create_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '文档模板',
                'verbose_name_plural': '文档模板',
            },
        ),
        migrations.CreateModel(
            name='DocTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('doc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_knowledge_base.doc')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_knowledge_base.tag')),
            ],
            options={
                'verbose_name': '文档标签',
                'verbose_name_plural': '文档标签',
            },
        ),
        migrations.CreateModel(
            name='DocShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(blank=True, max_length=100, null=True, verbose_name='token')),
                ('share_type', models.IntegerField(choices=[(0, '公开'), (1, '私密')], default=0)),
                ('share_value', models.CharField(blank=True, max_length=10, null=True, verbose_name='分享码')),
                ('enable', models.BooleanField(default=True, verbose_name='启用')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('doc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_knowledge_base.doc')),
            ],
            options={
                'verbose_name': '文档分享',
                'verbose_name_plural': '文档分享',
            },
        ),
        migrations.CreateModel(
            name='DocHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pro_content', models.TextField(blank=True, null=True, verbose_name='历史编辑内容')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('create_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('doc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_knowledge_base.doc')),
            ],
            options={
                'verbose_name': '文档历史',
                'verbose_name_plural': '文档历史',
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(default='default.zip', max_length=200, verbose_name='附件名')),
                ('file_size', models.CharField(blank=True, max_length=100, null=True, verbose_name='附件打小')),
                ('file_path', models.FileField(upload_to='accachment/%Y/%m/', verbose_name='附件')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '附件',
                'verbose_name_plural': '附件',
            },
        ),
        migrations.AddIndex(
            model_name='doc',
            index=models.Index(fields=['top_doc', 'parent_doc', 'status'], name='app_knowled_top_doc_c35c6b_idx'),
        ),
        migrations.AddIndex(
            model_name='doc',
            index=models.Index(fields=['sort'], name='app_knowled_sort_59104a_idx'),
        ),
    ]
